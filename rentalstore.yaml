openapi: 3.0.0
info:
  title: Rental Store
  description:
    A service that provides a few different modes to inform
  version: 0.0.1
servers:
  - url: 'http://localhost:8080'
    description: Local dev server
paths:
  /customer:
    post:
      summary: Creates a new customer entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: A customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete customer information. Some required fields missing.
    get:
      summary: Retrieves a list of all customers.
      responses:
        '200':
          description: A list of all customers and their information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
                
  /customer/{customer_id}:
    get:
      summary: Retrieves the entry for the customer with the given id.
      parameters: 
        - name: customer_id
          in: path
          required: true
          description: Id of the customer you would like to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: City object matching given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      
    put:
      summary: Updates the entry for the customer with the given id.
      parameters: 
        - name: customer_id
          in: path
          required: true
          description: Id of the customer you would like to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: A customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete customer information. Some required fields missing.
      
    delete:
      summary: Deletes the entry for the customer with the given id.
      parameters: 
        - name: customer_id
          in: path
          required: true
          description: Id of the customer you would like to delete.
          schema:
            type: integer
      responses:
        '200':
          description: Customer successfully deleted.
          
  /item:
    post:
      summary: Creates a new item entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: An item object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete customer information. Some required fields missing.
    get:
      summary: Retrieves a list of all the items.
      responses:
        '200':
          description: A list of all items and their information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
                
  /item/{item_id}:
    get:
      summary: Retrieves the entry for the item with the given id.
      parameters: 
        - name: item_id
          in: path
          required: true
          description: Id of the item you would like to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: Item object matching given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
      
    put:
      summary: Updates the entry for the item with the given id.
      parameters: 
        - name: item_id
          in: path
          required: true
          description: Id of the item you would like to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: An item object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete customer information. Some required fields missing.
      
    delete:
      summary: Deletes the entry for the item with the given id.
      parameters: 
        - name: item_id
          in: path
          required: true
          description: Id of the item you would like to delete.
          schema:
            type: integer
      responses:
        '200':
          description: Item successfully deleted.
          
  /invoice:
    post:
      summary: Creates a new invoice entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '201':
          description: An invoice object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete invoice information. Some required fields missing.
          
  /invoice/{invoice_id}:
    delete:
      summary: Deletes the entry for the invoice with the given id.
      parameters: 
        - name: invoice_id
          in: path
          required: true
          description: Id of the invoice you would like to delete.
          schema:
            type: integer
      responses:
        '200':
          description: Invoice successfully deleted.
          
  /invoice/{customer_id}:
    get:
      summary: Retrieves the invoices for the customer with the given customer id.
      parameters: 
        - name: customer_id
          in: path
          required: true
          description: Customer id of the invoices you would like to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: Invoice objects matching the given customer id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'

components:
  schemas:
    Customer:
      properties:
        customer_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        company:
          type: string
        phone:
          type: string
      required:
        - customer_id
        - first_name
        - last_name
        - email
        - company
        - phone
    Item:
      properties:
        item_id:
          type: integer
        name:
          type: string
        description:
          type: string
        daily_rate:
          type: number
      required:
        - item_id
        - name
        - description
        - daily_rate
    Invoice:
      properties:
        invoice_id:
          type: integer
        customer_id:
          type: integer
        order_date:
          type: string
        pickup_date:
          type: string
        return_date:
          type: string
        late_fee:
          type: number
      required:
        - invoice_id
        - customer_id
        - order_date
        - pickup_date
        - return_date
        - late_fee
    
        
          
    
   
      